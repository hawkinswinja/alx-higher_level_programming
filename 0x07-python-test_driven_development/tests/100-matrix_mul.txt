'''100-matrix_mul''' module
This module contains one function
it returns the result of multipling two matrices

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

The function only accepts two lists of lists with integers or floats as args
otherwise relevant exception is raised

>>> matrix_mul()
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
>>> matrix_mul([[1, 2]])
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
>>> matrix_mul('school', [[1, 2]])
Traceback (most recent call last):
TypeError: m_a must be a list
>>> matrix_mul([[1, 2]], 'school')
Traceback (most recent call last):
TypeError: m_b must be a list
>>> matrix_mul([1, 2], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> matrix_mul([[1,'a']], [[3, 4], [5, 6]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[1, 2]], [[3, 4], [5, 'a']])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> matrix_mul([[1, 2, 3], [1, 2, 2]], [1, 2, 3, 4])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> matrix_mul([], [[1, 2, 3], [1, 2, 3]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> matrix_mul([[1, 2, 3], [1, 2, 3]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty

the matrix must be equal in size for all rows
>>> matrix_mul([[1, 2], [1, 2, 3]], [[1, 2, 3], [1, 2, 2]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size
>>> matrix_mul([[1, 2]], [[1, 2, 3], [1, 2, 2, 4]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

no. of columns of matrix m_a must equal the rows of m_b
>>> matrix_mul([[1, 2]], [[1, 2, 3]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
