matrix_divided function
Divides all contents of the matrix by the number div
usage: matrix_divided(matrix, div)
matrix must be a list of lists of integers or floats
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Raises exceptions where matrix is not a list of lists
>>> matrix = [
... 'school',
...	[3]
... ]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

All lists must be equal in length
>>> matrix = [
...	[2, 4, 6],
...	[2, 4]
... ]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

Div must be a number either integer or float.
The function fails if div is not a number
>>> matrix = [
...	[2, 4, 6],
...	[2, 4, 6]
... ]
>>> matrix_divided(matrix, 'a')
Traceback (most recent call last):
TypeError: div must be a number

Div cannot be zero as it raises a division error
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

contents of the matrix must be a number
>>> matrix = [
...	['a', 2, 3],
...	[1, 2, 3]
... ]
>>> matrix_divided(matrix, 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
